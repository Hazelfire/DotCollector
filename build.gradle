/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

import com.amazonaws.services.s3.model.ObjectMetadata;

import jp.classmethod.aws.gradle.s3.CreateBucketTask;
import jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask;
import jp.classmethod.aws.gradle.s3.AmazonS3PluginExtension;
import jp.classmethod.aws.gradle.s3.SyncTask;

plugins {
  id "jp.classmethod.aws" version "0.37"
  id "com.moowork.node" version "1.2.0"
  id "base"
}

aws {
  profileName = "default"
  region = "ap-southeast-2"
}

task createDevBucket(type: CreateBucketTask){
  bucketName "dotcollectordev-${aws.region}-${aws.accountId}"
  region "ap-southeast-2"
  ifNotExists true
}

apply plugin: 'jp.classmethod.aws.cloudformation'

cloudFormation{
  templateFile project.file('api/template.yaml')
  templateBucket "dotcollectordev-${aws.region}-${aws.accountId}"
  region "ap-southeast-2"
  templateKeyPrefix 'template'
  stackName 'dotcollector'
  capabilityIam true
  stackParams([
    CodeVersion: '2G1ReNUvWRa3jiMWKMEsusg.e2J33zxR'
  ])
}

task zipSource(type: Zip, group: "Archive"){
  from "api/src"
  into "/"
  destinationDir file("build/bundle")
  archiveName("lambda.zip")
}

task pushBundleToS3(type: AmazonS3FileUploadTask, dependsOn: [createDevBucket,zipSource]){
  file file("build/bundle/lambda.zip")
  bucketName "dotcollectordev-${aws.region}-${aws.accountId}"
  key "bundle/lambda.zip"
  doLast {
    println existingObjectMetadata().getVersionId()
    cloudFormation.stackParams([
      CodeVersion: existingObjectMetadata().getVersionId()
    ])
  }
}

task deployCloudformation(dependsOn: [
  createDevBucket,
  pushBundleToS3,
  awsCfnUploadTemplate,
  awsCfnMigrateStackAndWaitCompleted
])

awsCfnUploadTemplate.mustRunAfter(pushBundleToS3)
awsCfnMigrateStackAndWaitCompleted.mustRunAfter(pushBundleToS3)

task installReactDependencies(type: NpmTask){
  args = ["install", "--prefix", "react"]
}

task buildReactProject(type: NpmTask, dependsOn: installReactDependencies){
  args = ["run", "build", "--prefix", "react"]
}

task moveDistFolderToBucket(type: SyncTask, dependsOn: buildReactProject){
  source file("react/dist")
  bucketName "dot.hazelfire.org"
  prefix "dist/"
  acl "PublicRead"
}

task moveHtmlFolderToBucket(type: SyncTask, dependsOn: buildReactProject){
  source file("react/html")
  bucketName "dot.hazelfire.org"
  prefix "html/"
  acl "PublicRead"
}

task moveWebsiteToBuckets(dependsOn: [
  moveDistFolderToBucket,
  moveHtmlFolderToBucket
])

task fullBuild(dependsOn:[
  deployCloudformation,
  moveWebsiteToBuckets
])
